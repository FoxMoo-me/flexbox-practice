body {
    margin: 5rem;
    }

.item {
    border: 1px double #457081;
    margin: 10px;
    }

/* flex-basis changes size of item(s) across main axis */
    .containerFlexRow .item-1 {
    /* flex-basis: auto; */
    flex-basis: 50%;
    /* flex-basis: 20px; */
    }
/* flex-basis changes size of item(s) across main axis */
.containerFlexColumn .item-1 {
    /* flex-basis: auto; */
    flex-basis: 50%;
    /* flex-basis: 20px; */
}

.containerFlexColumn .item-7 {
    /* default value is 0 */
    /* how items grow across main axis */
    /* the bigger value the most space the item will get */
    /* flex-grow: 0; */
    flex-grow: 1;
}

.containerFlexRow .item-7 {
    /* default value is 0 */
    /* how items grow across main axis */
    /* flex-grow: 0; */
    /* flex-grow: 1; */
}

.containerFlexColumn .item-4 {
    /* by default the value 1 one is used */
    /* the higher value the more the item will shrink */
    flex-shrink: 1;
    /* the item stays the same size - doesnt shrink at all when value is set to 0 */
    flex-shrink: 0;
}

.containerFlexRow .item-4 {
    /* by default the value 1 one is used */
    /* the higher value the more the item will shrink */
    flex-shrink: 1;
    /* the item stays the same size - doesnt shrink at all when value is set to 0 */
    flex-shrink: 0;
}

.containerFlexRow {
    display: flex;
    flex-direction: row;
    /* flex-direction: row-reverse */
    /* aligns content along the main axis - in the case of Row-direction it will be horizonatal */
    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-around; */
    /* justify-content: center; */
    /* justify-content: space-between; */
    /* ALIGN ITEMS */
    /* align-items - will align items along cross axis - in the case of Row it will be vertical */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: center; */
    /* FLEX - WRAP - default is no wrap */
    /* flex-wrap: nowrap; */
    flex-wrap: wrap;
    /* flex-wrap: wrap-reverse; */

    /* ALIGN - CONTENT :  stretch is default - it aligns items across the cross axis*/
    /* align-content: stretch; */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: space-between; */
    /* align-content: space-around; */
    /* align-content: center; */

    border: 0.5rem dotted black;
    background-color: aquamarine;
    padding-top: 1rem;
    height: 200px;
    width: 200px;
    }

.containerFlexColumn {
    display: flex;
    flex-direction: column;
    /* flex-direction: column-reverse; */
    /* aligns content along the main axis - in the case of Column-direction it will be vertical */
    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-around; */
    /* justify-content: center; */
    /* justify-content: space-between; */
    /* align-items - will align items along cross axis - in the case of Row it will be horizontal */

    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: center; */

     /* FLEX - WRAP - default is no wrap*/
    /* flex-wrap: nowrap; */
    flex-wrap: wrap;
    /* flex-wrap: wrap-reverse; */

    /* ALIGN - CONTENT :  stretch is default - it aligns items across the cross axis*/
    /* align-content: stretch; */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: space-between; */
    /* align-content: space-around; */
    /* align-content: center; */
    border: 0.1rem dashed black;
    height: 250px;
    background-color: bisque;
    margin-top: 1rem;
    }

